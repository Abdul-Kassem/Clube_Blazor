@page "/Cidades/Edit/{id:int}"
@using Blazor_Clube.Models
@using System.Text.Json.Nodes
@inject HttpClient Http
@inject NavigationManager navManager

<div class="row">
    <div class="col-lg-8">
        <h1 class="mb-5">Editar Cidade</h1>

        @if (cidade == null)
        {
            <p><em>Carregando...</em></p>
        }
        else
        {
            <div class="row mb-3">
                <label class="col-md-4 col-form-label">Nome</label>
                <div class="col-md-8">
                    <input class="form-control" @bind="CidadeData.Nome" />
                    <span class="text-danger">@Erros["Nome"]?[0]</span>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">DDD</label>
                <div class="col-md-8">
                    <input class="form-control" @bind="CidadeData.DDD" />
                    <span class="text-danger">@Erros["DDD"]?[0]</span>
                </div>
            </div>

            <div class="row mb-3">
                <label class="col-md-4 col-form-label">UF</label>
                <div class="col-md-8">
                    <select class="form-control" @bind="CidadeData.EstadoId">
                        <option value="">Selecione o estado</option>
                        @foreach (var estado in estados)
                        {
                            <option value="@estado.Id" selected="@estado.Id == CidadeData.EstadoId">@estado.Sigla</option>
                        }
                    </select>
                    <span class="text-danger">@Erros["Estado"]?[0]</span>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-4 col-md-4 d-grid">
                    <button class="btn btn-primary" @onclick="SaveCidade">Submit</button>
                </div>
                <div class="col-md-4 d-grid">
                    <a class="btn btn-outline-primary" href="/Cidades">Cancelar</a>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public int Id { set; get; }
    public Cidade? cidade = null;
    public CidadeDto CidadeData { set; get; } = new();
    public JsonNode Erros { set; get; } = new JsonObject();
    private List<Estado> estados = new List<Estado>();

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            cidade = await Http.GetFromJsonAsync<Cidade>("https://localhost:4000/api/Cidades/" + Id);
            CidadeData.Nome = cidade?.Nome ?? "";
            CidadeData.DDD = cidade?.DDD ?? "";
            CidadeData.EstadoId = cidade?.EstadoId ?? "";

            estados = await Http.GetFromJsonAsync<List<Estado>>("https://localhost:4000/api/Estados");
        }
        catch (Exception ex)
        {
            Console.WriteLine("Exception: " + ex.Message);
        }
    }

    protected async Task SaveCidade()
    {
        var response = await Http.PutAsJsonAsync("https://localhost:4000/api/Cidades/" + Id, CidadeData);
        if (response.IsSuccessStatusCode)
        {
            navManager.NavigateTo("/Cidades");
        }
        else
        {
            var strResponse = await response.Content.ReadAsStringAsync();
            try
            {
                var jsonResponse = JsonNode.Parse(strResponse);
                Erros = jsonResponse?["erros"] ?? new JsonObject();
            }
            catch (Exception ex)
            {
            }
        }
    }
}
